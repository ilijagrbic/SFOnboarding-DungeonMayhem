{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/list\";\nfunction GameComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.continueGame());\n    });\n    i0.ɵɵtext(2, \"Continue Game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.startGame());\n    });\n    i0.ɵɵtext(4, \"Start Game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.joinGame());\n    });\n    i0.ɵɵtext(6, \"Join Game\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2, \"Start a NEW game:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function GameComponent_div_3_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.startGameRequest());\n    });\n    i0.ɵɵelementStart(4, \"mat-list\")(5, \"mat-list-item\")(6, \"mat-form-field\", 8)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Number of bots (1-3)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function GameComponent_div_3_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.botNo = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"mat-list-item\")(11, \"button\", 10);\n    i0.ɵɵtext(12, \"Start\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"mat-list-item\")(14, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_3_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.meni());\n    });\n    i0.ɵɵtext(15, \"Menu\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.botNo);\n  }\n}\nfunction GameComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2, \"Start an existing game:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function GameComponent_div_4_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.joinGameRequest());\n    });\n    i0.ɵɵelementStart(4, \"mat-list\")(5, \"mat-list-item\")(6, \"mat-form-field\", 8)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Game ID (ask a fried)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function GameComponent_div_4_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.gameId = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"mat-list-item\")(11, \"button\", 10);\n    i0.ɵɵtext(12, \"Join\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"mat-list-item\")(14, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_4_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.meni());\n    });\n    i0.ɵɵtext(15, \"Menu\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.gameId);\n  }\n}\nfunction GameComponent_div_5_div_3_div_8_mat_card_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const effect_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", effect_r24.cardEffectType, \": \", effect_r24.value, \" \");\n  }\n}\nfunction GameComponent_div_5_div_3_div_8_mat_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 17);\n    i0.ɵɵtemplate(1, GameComponent_div_5_div_3_div_8_mat_card_4_div_1_Template, 2, 2, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const card_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", card_r22.cardEffects);\n  }\n}\nfunction GameComponent_div_5_div_3_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Hand:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtemplate(4, GameComponent_div_5_div_3_div_8_mat_card_4_Template, 2, 1, \"mat-card\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const player_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", player_r17.deck.hand);\n  }\n}\nfunction GameComponent_div_5_div_3_div_9_mat_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 17)(1, \"div\");\n    i0.ɵɵtext(2, \"Card\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameComponent_div_5_div_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Hand:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtemplate(4, GameComponent_div_5_div_3_div_9_mat_card_4_Template, 3, 0, \"mat-card\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const player_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", player_r17.deck.hand);\n  }\n}\nfunction GameComponent_div_5_div_3_mat_card_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const effect_r31 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", effect_r31.cardEffectType, \": \", effect_r31.value, \" \");\n  }\n}\nfunction GameComponent_div_5_div_3_mat_card_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 17);\n    i0.ɵɵtemplate(1, GameComponent_div_5_div_3_mat_card_14_div_1_Template, 2, 2, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const card_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", card_r29.cardEffects);\n  }\n}\nfunction GameComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-subtitle\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-content\");\n    i0.ɵɵtemplate(8, GameComponent_div_5_div_3_div_8_Template, 5, 1, \"div\", 14);\n    i0.ɵɵtemplate(9, GameComponent_div_5_div_3_div_9_Template, 5, 1, \"div\", 14);\n    i0.ɵɵelementStart(10, \"div\")(11, \"h3\");\n    i0.ɵɵtext(12, \"In Play:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 15);\n    i0.ɵɵtemplate(14, GameComponent_div_5_div_3_mat_card_14_Template, 2, 1, \"mat-card\", 16);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const player_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", player_r17.characterType, \" (\", player_r17.actorId, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Health: \", player_r17.healthPoints, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.isCurrentPlayer(player_r17.actorId));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r16.isCurrentPlayer(player_r17.actorId));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", player_r17.deck.inPlay);\n  }\n}\nfunction GameComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, GameComponent_div_5_div_3_Template, 15, 6, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"In Game: \", ctx_r3.gameId, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.gameModel.playerStates);\n  }\n}\nexport class GameComponent {\n  constructor(http) {\n    this.http = http;\n    this.username = '';\n    this.componentShown = \"meni\";\n  }\n  ngOnChanges(changes) {\n    if (changes.username) {\n      console.log('Username changed:', this.username);\n    }\n  }\n  startGame() {\n    this.componentShown = \"start\";\n  }\n  joinGame() {\n    this.componentShown = \"join\";\n  }\n  meni() {\n    this.componentShown = \"meni\";\n  }\n  continueGame() {\n    const body = {\n      username: this.username\n    };\n    this.mockReponse();\n    this.http.put(environment.backendHost + 'api/Player/getGame', body).subscribe(response => {\n      this.processGameResponse(response);\n      console.log('Get game response:', this.gameId, this.gameModel);\n    });\n  }\n  mockReponse() {\n    this.processGameResponse({\n      \"gameId\": \"LongKind|-729706753122551208\",\n      \"playerStates\": [{\n        \"actorId\": \"LongKind|-7619694219865240744\",\n        \"healthPoints\": 10,\n        \"isBot\": true,\n        \"characterType\": 1,\n        \"deck\": {\n          \"drawPile\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }],\n          \"discardPile\": [],\n          \"hand\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }],\n          \"inPlay\": []\n        }\n      }, {\n        \"actorId\": \"StringKind|test2\",\n        \"healthPoints\": 10,\n        \"isBot\": false,\n        \"characterType\": 0,\n        \"deck\": {\n          \"drawPile\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }]\n          }],\n          \"discardPile\": [],\n          \"hand\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 1,\n              \"value\": 1\n            }]\n          }],\n          \"inPlay\": []\n        }\n      }, {\n        \"actorId\": \"LongKind|-731059630046446766\",\n        \"healthPoints\": 10,\n        \"isBot\": true,\n        \"characterType\": 1,\n        \"deck\": {\n          \"drawPile\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }],\n          \"discardPile\": [],\n          \"hand\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }],\n          \"inPlay\": []\n        }\n      }, {\n        \"actorId\": \"LongKind|-5546222445343084733\",\n        \"healthPoints\": 10,\n        \"isBot\": true,\n        \"characterType\": 1,\n        \"deck\": {\n          \"drawPile\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }],\n          \"discardPile\": [],\n          \"hand\": [{\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 4,\n              \"value\": 1\n            }, {\n              \"cardEffectType\": 0,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }, {\n            \"cardEffects\": [{\n              \"cardEffectType\": 3,\n              \"value\": 1\n            }]\n          }],\n          \"inPlay\": []\n        }\n      }]\n    });\n  }\n  startGameRequest() {\n    const body = {\n      username: this.username,\n      botNo: this.botNo\n    };\n    this.http.post(environment.backendHost + 'api/Player/startGame', body).subscribe(response => {\n      this.processGameResponse(response);\n      console.log('Start game response:', this.gameId, this.gameModel);\n    });\n  }\n  joinGameRequest() {\n    const body = {\n      username: this.username,\n      gameId: \"LongKind|\" + this.gameId\n    };\n    this.http.post(environment.backendHost + 'api/Player/joinGame', body).subscribe(response => {\n      this.processGameResponse(response);\n      console.log('Join game response:', this.gameId, this.gameModel);\n    });\n  }\n  isCurrentPlayer(playerActorId) {\n    return 'StringKind|' + this.username === playerActorId;\n  }\n  processGameResponse(response) {\n    this.gameModel = response;\n    this.gameId = this.gameModel[\"gameId\"].split('|')[1];\n    this.componentShown = \"ingame\";\n  }\n  refreshGame() {\n    console.log(\"Trying to refresh game if needed!\", this);\n    if (this.componentShown === \"ingame\") {\n      console.log(\"Needed!\");\n      this.continueGame();\n    }\n  }\n  static #_ = this.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    inputs: {\n      username: \"username\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 5,\n    consts: [[3, \"ngSwitch\"], [\"class\", \"game-actions-container\", 4, \"ngSwitchCase\"], [4, \"ngSwitchCase\"], [1, \"game-actions-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"botNo\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"gameId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"player-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"player-container\"], [4, \"ngIf\"], [1, \"card-container\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n        i0.ɵɵtemplate(2, GameComponent_div_2_Template, 7, 0, \"div\", 1);\n        i0.ɵɵtemplate(3, GameComponent_div_3_Template, 16, 1, \"div\", 1);\n        i0.ɵɵtemplate(4, GameComponent_div_4_Template, 16, 1, \"div\", 1);\n        i0.ɵɵtemplate(5, GameComponent_div_5_Template, 4, 2, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.componentShown);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"meni\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"start\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"join\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"ingame\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton, i7.MatCard, i7.MatCardContent, i7.MatCardHeader, i7.MatCardSubtitle, i7.MatCardTitle, i8.MatList, i8.MatListItem],\n    styles: [\".game-actions-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 50vh;\\r\\n  gap: 20px;\\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%] {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.player-container[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.card-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  gap: 10px;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%] {\\r\\n  width: 100px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLFNBQVM7QUFDWDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztBQUNYOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmdhbWUtYWN0aW9ucy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGhlaWdodDogNTB2aDtcclxuICBnYXA6IDIwcHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5wbGF5ZXItY29udGFpbmVyIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBnYXA6IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICB3aWR0aDogMTAwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["environment","i0","GameComponent","constructor","http","ngOnChanges","changes","username","console","log","startGame","componentShown","joinGame","meni","continueGame","body","mockReponse","put","backendHost","subscribe","response","processGameResponse","gameId","gameModel","startGameRequest","botNo","post","joinGameRequest","isCurrentPlayer","playerActorId","split","refreshGame","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["Q:\\source\\DungeonMayhemApp\\Web3\\ClientApp\\src\\app\\game\\game.component.ts","Q:\\source\\DungeonMayhemApp\\Web3\\ClientApp\\src\\app\\game\\game.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent {\r\n\r\n  @Input() username: string = '';\r\n  componentShown: string = \"meni\";\r\n  botNo: number | undefined;\r\n  gameId: number | undefined;\r\n  gameModel: any | undefined;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.username) {\r\n      console.log('Username changed:', this.username);\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.componentShown = \"start\";\r\n  }\r\n\r\n  joinGame() {\r\n    this.componentShown = \"join\";\r\n  }\r\n\r\n  meni() {\r\n    this.componentShown = \"meni\";\r\n  }\r\n\r\n\r\n  continueGame() {\r\n    const body = { username: this.username };\r\n    this.mockReponse();\r\n    this.http.put(environment.backendHost + 'api/Player/getGame', body)\r\n      .subscribe(response => {\r\n        this.processGameResponse(response);\r\n        console.log('Get game response:', this.gameId, this.gameModel);\r\n      });\r\n  }\r\n  mockReponse() {\r\n    this.processGameResponse({\r\n      \"gameId\": \"LongKind|-729706753122551208\",\r\n      \"playerStates\": [\r\n        {\r\n          \"actorId\": \"LongKind|-7619694219865240744\",\r\n          \"healthPoints\": 10,\r\n          \"isBot\": true,\r\n          \"characterType\": 1,\r\n          \"deck\": {\r\n            \"drawPile\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"discardPile\": [],\r\n            \"hand\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"inPlay\": []\r\n          }\r\n        },\r\n        {\r\n          \"actorId\": \"StringKind|test2\",\r\n          \"healthPoints\": 10,\r\n          \"isBot\": false,\r\n          \"characterType\": 0,\r\n          \"deck\": {\r\n            \"drawPile\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"discardPile\": [],\r\n            \"hand\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 1,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"inPlay\": []\r\n          }\r\n        },\r\n        {\r\n          \"actorId\": \"LongKind|-731059630046446766\",\r\n          \"healthPoints\": 10,\r\n          \"isBot\": true,\r\n          \"characterType\": 1,\r\n          \"deck\": {\r\n            \"drawPile\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"discardPile\": [],\r\n            \"hand\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"inPlay\": []\r\n          }\r\n        },\r\n        {\r\n          \"actorId\": \"LongKind|-5546222445343084733\",\r\n          \"healthPoints\": 10,\r\n          \"isBot\": true,\r\n          \"characterType\": 1,\r\n          \"deck\": {\r\n            \"drawPile\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"discardPile\": [],\r\n            \"hand\": [\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 4,\r\n                    \"value\": 1\r\n                  },\r\n                  {\r\n                    \"cardEffectType\": 0,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"cardEffects\": [\r\n                  {\r\n                    \"cardEffectType\": 3,\r\n                    \"value\": 1\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            \"inPlay\": []\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  startGameRequest() {\r\n    const body = { username: this.username, botNo: this.botNo };\r\n    this.http.post(environment.backendHost+'api/Player/startGame', body)\r\n      .subscribe(response => {\r\n        this.processGameResponse(response);\r\n        console.log('Start game response:', this.gameId, this.gameModel);\r\n      });\r\n  }\r\n\r\n  joinGameRequest() {\r\n    const body = { username: this.username, gameId: \"LongKind|\" + this.gameId };\r\n    this.http.post(environment.backendHost + 'api/Player/joinGame', body)\r\n      .subscribe(response => {\r\n        this.processGameResponse(response);\r\n        console.log('Join game response:', this.gameId, this.gameModel);\r\n      });\r\n  }\r\n\r\n  isCurrentPlayer(playerActorId: string) {\r\n    return ('StringKind|' + this.username) === playerActorId\r\n  }\r\n\r\n  processGameResponse(response:any) {\r\n    this.gameModel = response;\r\n    this.gameId = this.gameModel[\"gameId\"].split('|')[1] as number;\r\n    this.componentShown = \"ingame\";\r\n  }\r\n\r\n  refreshGame() {\r\n    console.log(\"Trying to refresh game if needed!\", this);\r\n    if (this.componentShown === \"ingame\") {\r\n      console.log(\"Needed!\");\r\n      this.continueGame();\r\n    }\r\n  }\r\n}\r\n","<div>\n    <div [ngSwitch]=\"componentShown\">\n        <div *ngSwitchCase=\"'meni'\" class=\"game-actions-container\">\n            <button mat-raised-button color=\"primary\" (click)=\"continueGame()\">Continue Game</button>\n            <button mat-raised-button color=\"accent\" (click)=\"startGame()\">Start Game</button>\n            <button mat-raised-button color=\"warn\" (click)=\"joinGame()\">Join Game</button>\n        </div>\n        <div *ngSwitchCase=\"'start'\" class=\"game-actions-container\">\n            <h2>Start a NEW game:</h2>\n            <form (ngSubmit)=\"startGameRequest()\">\n                <mat-list>\n                    <mat-list-item>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Number of bots (1-3)</mat-label>\n                            <input matInput type=\"number\" [(ngModel)]=\"botNo\" name=\"botNo\" required>\n                        </mat-form-field>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <button mat-raised-button color=\"primary\" type=\"submit\">Start</button>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <button mat-raised-button color=\"primary\" (click)=\"meni()\">Menu</button>\n                    </mat-list-item>\n                </mat-list>\n            </form>\n        </div>\n        <div *ngSwitchCase=\"'join'\" class=\"game-actions-container\">\n            <h2>Start an existing game:</h2>\n            <form (ngSubmit)=\"joinGameRequest()\">\n                <mat-list>\n                    <mat-list-item>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Game ID (ask a fried)</mat-label>\n                            <input matInput type=\"number\" [(ngModel)]=\"gameId\" name=\"gameId\" required>\n                        </mat-form-field>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <button mat-raised-button color=\"primary\" type=\"submit\">Join</button>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <button mat-raised-button color=\"primary\" (click)=\"meni()\">Menu</button>\n                    </mat-list-item>\n                </mat-list>\n            </form>\n        </div>\n        <div *ngSwitchCase=\"'ingame'\">\n            <h2>In Game: {{gameId}}</h2>\n            <div *ngFor=\"let player of gameModel.playerStates\" class=\"player-container\">\n                <mat-card>\n                    <mat-card-header>\n                        <mat-card-title>{{ player.characterType }} ({{ player.actorId }})</mat-card-title>\n                        <mat-card-subtitle>Health: {{ player.healthPoints }}</mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div *ngIf=\"isCurrentPlayer(player.actorId)\">\n                            <h3>Hand:</h3>\n                            <div class=\"card-container\">\n                                <mat-card *ngFor=\"let card of player.deck.hand\" class=\"card\">\n                                    <div *ngFor=\"let effect of card.cardEffects\">\n                                        {{ effect.cardEffectType }}: {{ effect.value }}\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </div>\n                        <div *ngIf=\"!isCurrentPlayer(player.actorId)\">\n                            <h3>Hand:</h3>\n                            <div class=\"card-container\">\n                                <mat-card *ngFor=\"let card of player.deck.hand\" class=\"card\">\n                                    <div>Card</div>\n                                </mat-card>\n                            </div>\n                        </div>\n                        <div>\n                            <h3>In Play:</h3>\n                            <div class=\"card-container\">\n                                <mat-card *ngFor=\"let card of player.deck.inPlay\" class=\"card\">\n                                    <div *ngFor=\"let effect of card.cardEffects\">\n                                        {{ effect.cardEffectType }}: {{ effect.value }}\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}